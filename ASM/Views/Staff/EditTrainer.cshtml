@model ASM.Models.UserInfor
@{
    ViewBag.Title = "EditTrainer";
    Layout = "~/Views/Staff/_LayoutFor Staff.cshtml";
    TempData["user"] = TempData["user"];
}
<br>
<style>
    .multiselect {
        width: 200px;
    }

    .selectBox {
        position: relative;
    }

        .selectBox select {
            width: 100%;
            font-weight: bold;
        }

    .overSelect {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
    }

    #checkboxes {
        display: none;
        border: 1px #dadada solid;
    }

        #checkboxes label {
            display: block;
        }

            #checkboxes label:hover {
                background-color: #1e90ff;
            }
</style>
<br>
@{ List<int> abc = new List<int>();
    if (TempData["abc"] != null)
    {
        abc = TempData["abc"].ToString().Split(',').
            Select(o => Int32.Parse(o)).ToList();
    }

    else if (Model != null)
    {
        abc = Model.listCourse.Select(f => f.Id).ToList();
    }
}
<div class="container">
    <h1 class="display-4">Edit Trainer</h1>

    @if (!ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary(false, "Error Summary", new { @class = "text-danger" })
    }

    @using (Html.BeginForm(FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Name,
              htmlAttributes: new { @class = "font-weight-bold" })


            @Html.EditorFor(m => m.Name,
             new
             {
               htmlAttributes = new { @class = "form-control" }
             })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Type, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Type, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.WorkingPlace, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.WorkingPlace, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.PhoneNumber, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <br />
        <div class="form-group">
            <label>Course</label>
            <div class="multiselect">
                <div class="selectBox" onclick="showCheckboxes()">
                    <select>
                        <option>Select an option</option>
                    </select>
                    <div class="overSelect"></div>
                </div>
                <div id="checkboxes">
                    @foreach (var f in ViewBag.Formats)
                    {
                        <input class="form-check-input" type="checkbox"
                               value="@f.Id" id="@f.Name" name="formatIds[]"
                               @(abc.Contains(f.Id) ? "checked" : string.Empty)>
                        <label class="form-check-label" for="@f.Name">
                            @f.Name
                        </label>
                    }
                </div>
            </div>
            <button type="submit" class="btn btn-dark">OK</button>

        </div>

    }

</div>
<script>
    var expanded = false;

    function showCheckboxes() {
        var checkboxes = document.getElementById("checkboxes");
        if (!expanded) {
            checkboxes.style.display = "block";
            expanded = true;
        } else {
            checkboxes.style.display = "none";
            expanded = false;
        }
    }
</script>


