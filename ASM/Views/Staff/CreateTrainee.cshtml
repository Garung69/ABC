@model ASM.Models.UserInfor
@{
    ViewBag.Title = "CreateTrainee";
    Layout = "~/Views/Staff/_LayoutFor Staff.cshtml";
    TempData["user"] = TempData["user"];
}
@{ List<int> abc = new List<int>();
    if (TempData["abc"] != null)
    {
        abc = TempData["abc"].ToString().Split(',').
            Select(o => Int32.Parse(o)).ToList();
    }

    else if (Model != null)
    {
        abc = Model.listCourse.Select(f => f.Id).ToList();
    }
}

<div class="container">
    <h1 class="display-4">New Trainee</h1>

    @if (!ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary(false, "Error Summary", new { @class = "text-danger" })
    }

    @using (Html.BeginForm(FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Name,
                htmlAttributes: new { @class = "font-weight-bold" })


            @Html.EditorFor(m => m.Name,
               new
               {
                   htmlAttributes = new { @class = "form-control" }
               })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Email,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Toeic, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Toeic,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Age, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Age,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DoB, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.DoB,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Experience, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Experience,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Location, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Location,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ProgrammingLanguage, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.ProgrammingLanguage,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Department, new { @class = "font-weight-bold" })
            @Html.EditorFor(m => m.Department,
              new
              {
                  htmlAttributes = new { @class = "form-control" }
              })
        </div>
        
        <div class="form-group">
            <label>CLass</label>
            <div class="form-check form-check-inline">
                @foreach (var f in ViewBag.Formats)
                {
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox"
                               value="@f.Id" id="@f.Name" name="formatIds[]"
                               @(abc.Contains(f.Id) ? "checked" : string.Empty)>
                        <label class="form-check-label" for="@f.Name">
                            @f.Name
                        </label>
                    </div>
                }
            </div>
        </div>
        <button type="submit" class="btn btn-dark">OK</button>
    }
</div>