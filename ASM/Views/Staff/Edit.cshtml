@model ASM.Models.UserInfor
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Staff/_LayoutFor Staff.cshtml";
    TempData["user"] = TempData["user"];
}
@{
    List<int> abc = new List<int>();


    if (TempData["FormatIds"] != null)
    {
        //validation, load from previous request
        abc = TempData["FormatIds"].ToString().Split(',')
                .Select(id => Int32.Parse(id))
                .ToList();
    }
    else if (Model != null) // this is in Edit
    {
        //edit, load from db
        abc = Model.listCourse
                           .Select(f => f.Id)
                           .ToList();
    }
}
<style>
    .multiselect {
        width: 200px;
    }

    .selectBox {
        position: relative;
    }

        .selectBox select {
            width: 100%;
            font-weight: bold;
        }

    .overSelect {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
    }

    #checkboxes {
        display: none;
        border: 1px #dadada solid;
    }

        #checkboxes label {
            display: block;
        }

            #checkboxes label:hover {
                background-color: #1e90ff;
            }
</style>
<div style="background-image: url(https://premierpaintroller.com/wp-content/uploads/2018/06/50-Beautiful-and-Minimalist-Presentation-Backgrounds-03.jpg)">
    @using (Html.BeginForm(FormMethod.Post))

    {
        <br />
        <br />
        <center>

            @Html.HiddenFor(m => m.Id)

            <div class="form-group">
                @Html.LabelFor(m => m.Name,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.Name,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.Email,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Education,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.Education,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Experience,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.Experience,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Department,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.Department,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DoB,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.DoB,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Location,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.Location,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ProgrammingLanguage,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.ProgrammingLanguage,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Toeic,
                  htmlAttributes: new { @class = "font-weight-bold", @style = "margin-left:20px" })

                @Html.EditorFor(m => m.Toeic,
                 new
                 {
                     htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                 })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Age, new { @class = "font-weight-bold", @style = "margin-left:20px" })
                @Html.EditorFor(m => m.Age,
                new
                {
                  htmlAttributes = new { @class = "form-control", @style = "width:250px; margin-left:20px; margin-right:20px" }
                })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "font-weight-bold", @style = "margin-left:20px" })
                @Html.EditorFor(m => m.UserName,
                new
                {
                  htmlAttributes = new { @class = "form-control", min = "0", @style = "width:250px; margin-left:20px; margin-right:20px" }
                })
            </div>

            <div class="form-group">
                <label>Course</label>
                <div class="multiselect">
                    <div class="selectBox" onclick="showCheckboxes()">
                        <select>
                            <option>Select an option</option>
                        </select>
                        <div class="overSelect"></div>
                    </div>
                    <div id="checkboxes">
                        @foreach (var f in ViewBag.Formats)
                        {
                            <input class="form-check-input" type="checkbox"
                                   value="@f.Id" id="@f.Name" name="formatIds[]"
                                   @(abc.Contains(f.Id) ? "checked" : string.Empty)>
                            <label class="form-check-label" for="@f.Name">
                                @f.Name
                            </label>
                        }
                    </div>
                </div>
                <button type="submit" class="btn btn-dark">OK</button>

            </div>
        </center>
    }
</div>

<script>
    var expanded = false;

    function showCheckboxes() {
        var checkboxes = document.getElementById("checkboxes");
        if (!expanded) {
            checkboxes.style.display = "block";
            expanded = true;
        } else {
            checkboxes.style.display = "none";
            expanded = false;
        }
    }
</script>

