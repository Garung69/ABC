@model ASM.Models.UserInfor
@{
    Layout = "~/Views/Trainee/_LayoutTrainee.cshtml";
    TempData["username"] = TempData["username"];
    var a = TempData["username"];
}

<div style="background-image: url(https://premierpaintroller.com/wp-content/uploads/2018/06/50-Beautiful-and-Minimalist-Presentation-Backgrounds-03.jpg)">
    <div class="mt-2 ml-6 mr-6 float-left">
        <span class="title">Set a new password</span>
        @using (Html.BeginForm(FormMethod.Post))
        {
            // @Html.HiddenFor(m => m.Id)

            <div class="form-group">

                <label class="font-weight-bold">Old Password:</label><br />
                @Html.PasswordFor(m => m.PasswordHash,
                  new
                  {
                      htmlAttributes = new { @class = "form-control" }
                  })

            </div>

            <div class="form-group">

                <label class="font-weight-bold">New Password:</label><br />
                @Html.PasswordFor(m => m.PassTemp,
                  new
                  {
                      htmlAttributes = new { @class = "form-control" }
                  })
            </div>
            <div class="form-group">

                <label class="font-weight-bold">Confirm Password:</label><br />
                @Html.PasswordFor(m => m.PassTempConfirm,
                  new
                  {
                      htmlAttributes = new { @class = "form-control" }
                  })
            </div>
            <button type="submit" class="btn btn-success">Submit</button>
        }
    </div>
    <div class="message float-right" style="margin-right: 50%; margin-top: 20px; background-color: lemonchiffon; border-radius: 15px;">
        @if (!ViewData.ModelState.IsValid)
        {
            @Html.ValidationSummary(false, "Error Summary", new { @class = "text-danger" });
        }
    </div>
    <div style="height: 450px;">
    </div>
</div>